(1) Using token= HMAC{userâ€™s password : (user=...)} would elimate the possibility of a length extension attack because the attacker would be forced to know the user's password in order to produce a valid token. When the user's password is a part of the token itself, an attacker can extend the "user=..." part of the url, adding the desired command, and then rehash without ever needing to know the password during the process. If the password is used as the key for the hash value of "user=...", then an attacker would be unable to rehash the extended url without knowing the password beforehand. This completely elimates the possibility of a length extension attack.
(4d) The use of a secret padding scheme will not prevent a padding oracle attack because an attacker could cycle through bits as usual until they received an invalid padding error. Once they get that error, they will know where the padding is and can continue the process to find out how much padding is present. Now the padding scheme is no longer a secret and a normal padding oracle attack can be used. Kerckhoff's principle states that a cryptographic system should be secure even if everything is known about it except the key. Therefore, relying on a secret padding scheme for security is inherently flawed. 